load KernSmooth
install.packages(KernSmooth)
library("KernSmooth", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages(c("boot", "foreign", "manipulate", "MASS", "mgcv", "nlme"))
x<-diag(3)
x
x<-matrix(rnorm(100),10,10)
x
x*x
x %*% x
y<-x %*% x
solve(x)
solve(x)*x
solve(x) %*% x
cacheSolve(x)
source('~/.active-rstudio-document')
cacheSolve(x)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean([1 2 3 4])
x<-1:4
x
cachemean(x)
makeVector(x)
cachemean(x)
makeVector(cachemean(x)
)
y<-makeVector(cachemean(x))
y$get
x<-1:10
vec<-makeVector(x)
vec$getmean()
mx<-mean(x)
mx
vec$setmean(mx)
vec$getmean()
vec<-makeVector(1:10)
cachemean(vec)
cachemean(vec)
mat<-matrix(rnorm(100),10,10)
cacheSolve(mat)
mat<-makeCacheMatrix(rnorm(100),10,10)
myMat<-matrix(rnorm(100),10,10)
mat<-makeCacheMatrix(myMat)
cacheSolve(mat)
cacheSolve(mat)
vec<-makeVector(1:10)
cachemean(vec)
cachemean(vec)
myMat<-matrix(rnorm(100),10,10)
mat<-makeCacheMatrix(myMat)
cacheSolve(mat)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
myMat<-matrix(rnorm(100),10,10)
mat<-makeCacheMatrix(myMat)
cacheSolve(mat)
cacheSolve(mat)
z<-cacheSolve(mat)
list(z)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
myMat<-matrix(rnorm(100),10,10)
mat<-makeCacheMatrix(myMat)
z<-cacheSolve(mat)
list(z)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
myMat<-matrix(rnorm(100),10,10)
mat<-makeCacheMatrix(myMat)
z<-cacheSolve(mat)
list(z)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
myMat<-matrix(rnorm(100),10,10)
mat<-makeCacheMatrix(myMat)
z<-cacheSolve(mat)
z
myMat %*% z
is.matrix(z)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
myMat<-matrix(rnorm(100),10,10)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
myMat<-matrix(rnorm(100),10,10)
mat<-makeCacheMatrix(myMat)
z<-cacheSolve(mat)
myMat %*% z
z<-cacheSolve(mat)
source('~/.active-rstudio-document')
cacheSolve(makeCacheMatrix(matrix(rnorm(100),10,10)))
cacheSolve(makeCacheMatrix(matrix(rnorm(9),3,3)))
cacheSolve(makeCacheMatrix(matrix(rnorm(9),3,3)))
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(x)
cacheSolve(x)
cacheSolve(x)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(x)
cacheSolve(x)
x
x$getInverse
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
x$getInverse
environment(x$get)
environment(x$get)$minv
cacheSolve(x)
environment(x$get)$minv
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
environment(x$get)$minv
cacheSolve(x)
environment(x$get)$minv
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
environment(x$get)$minv
cacheSolve(x)
environment(x$get)$minv
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
environment(x$get)$minv
cacheSolve(x)
cacheSolve(x)
environment(x$get)$minv
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(x)
cacheSolve(x)
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
?numeric
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(x)
cacheSolve(x)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(x)
cacheSolve(x)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(x)
cacheSolve(x)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(x)
cacheSolve(x)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
mat<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(mat)
cacheSolve(mat)
library(datasets)
data(iris)
?iris
Sepal.length
iris
iris#Sepal.length
mean(iris#Sepal.length)
;
iris[,Sepal.length]
iris.head
?head
head(iris)
iris[,Sepal.Length]
iris#Sepal.Length
head(iris)
?type
typeof(iris)
iris$Sepal.Length
mean(iris$Sepal.Length)
apply(iris[, 1:4], 2, mean)
?apply
apply(iris[, 1:4], 1, mean)
apply(iris, 2, mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
lapply(mtcars, mean)
sapply(mtcars, cyl, mean)
head(mtcars)
mtcars$cyl[mtcars$cyl == 4]
mtcars[mtcars$cyl == 4]
mtcars[mtcars$cyl == 4]$cyl
mtcars[mtcars$cyl == 4]
mtcars[,mtcars$cyl == 4]
mtcars[mtcars$cyl == 4,]
mtcars[mtcars$cyl == 4,]$hp
mean(mtcars[mtcars$cyl == 4,]$hp)
mean(mtcars[mtcars$cyl == 8,]$hp)
mean(mtcars[mtcars$cyl == 8,]$hp)-mean(mtcars[mtcars$cyl == 4,]$hp)
debug(ls)
ls
apply(iris[, 1:4], 1, mean)
mean(iris#Sepal.length)
;
mean(iris$Sepal.Length)
mean(iris[iris$Sepal.Length > 2,]$Sepal.Length)
head(iris)
mean(iris[iris$Species == "virginica",]$Sepal.Length)
split(mtcars, mtcars$cyl)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars[mtcars$cyl == 8,]$hp)-mean(mtcars[mtcars$cyl == 4,]$hp)
set.seed(1)
rpois(5,2)
?rpois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
?dbinom
?Rprof
system.time()
source('~/.active-rstudio-document')
x<-hilbert(4)
x
x<-hilbert(1000)
system.time(svd(x))
str(svd)
fileURL <- "http://derstandard.at"
doc <- htmlTreeParse(fileURL, useInternal=TRUE)
library(XML)
doc <- htmlTreeParse(fileURL, useInternal=TRUE)
headlines <- xpathSApply(doc,"//h2", xmlValue)
headlines[1]
xpathSApply(htmlTreeParse(fileUR, useInternal=TRUE),"//h2", xmlValue)[1]
xpathSApply(htmlTreeParse("http://derstandard.at", useInternal=TRUE),"//h2", xmlValue)[1]
xpathSApply(htmlTreeParse("http://derstandard.at", useInternal=TRUE),"//h2", xmlValue)[1]
x<-xpathSApply(htmlTreeParse("http://derstandard.at", useInternal=TRUE),"//h2", xmlValue)[1]
x
toString(x)
y<-"hello"
y
x<-xpathSApply(htmlTreeParse("http://derstandard.at", useInternal=TRUE),"//h2", xmlValue)
x
x<-xpathSApply(htmlTreeParse("http://derstandard.at", useInternal=TRUE),"//h2", xmlValue)[1]
x<-"adfqwer"
x[1:5]
x(1:5)
substr(x,1,5)
substr(x,6,10)
substr(x,1,5)
x<-"äöd"
iconvlist()
iconv(x, "LATIN2", "UTF-8")
x<-"äöd"
iconv(x, UTF-8", "LATIN2)
iconv(x, "UTF-8", "LATIN2")
x
y<-"  "
x+y
paste(x,y,sep="")
paste(x,replicate(2, " "),sep="")
paste(x,paste(replicate(2, " "),sep=""),sep="")
stri_dup(" ",2)
replicate(2, " ")
paste(replicate(2, " "), sep="")
paste(replicate(2, " "), collapse="")
paste(x,paste(replicate(2, " "),collapse=""),sep="")
paste(x,paste(replicate(2, " "),collapse=""),collapse="")
paste(x,paste(replicate(3, " "),collapse=""),collapse="")
r.result = "asdf  "
mr = sub("\\s+$", "", r.result)
mr
sub?
;
help sub
str(sub)
install.packages("httr")
Sys.getenv("LANG")
library(jsonlite)
raw <- fromJSON('[["2015-03-09","10.0",10.0,1],["2015-03-09","10.0",10.0,1],["2015-03-08","2.0",2.0,1],["2015-03-08","2.0",2.0,1],["2015-03-07","2.0",2.0,1],["2015-03-07","2.0",2.0,1],["2015-03-06","43.0",43.0,1],["2015-03-06","43.0",43.0,1],["2015-03-05","20.0",20.0,1],["2015-03-05","20.0",20.0,1],["2015-03-04","19.0",19.0,1],["2015-03-04","19.0",19.0,1],["2015-03-03","34.0",34.0,1],["2015-03-03","34.0",34.0,1],["2015-03-02","27.0",27.0,1],["2015-03-02","27.0",27.0,1],["2015-03-01","3.0",3.0,1],["2015-03-01","3.0",3.0,1],["2015-02-28","1.0",1.0,1],["2015-02-28","1.0",1.0,1],["2015-02-27","27.0",27.0,1],["2015-02-27","27.0",27.0,1],["2015-02-26","17.0",17.0,1],["2015-02-26","17.0",17.0,1],["2015-02-25","28.0",28.0,1],["2015-02-25","28.0",28.0,1],["2015-02-24","26.0",26.0,1],["2015-02-24","26.0",26.0,1],["2015-02-23","41.0",41.0,1],["2015-02-23","41.0",41.0,1],["2015-02-22","3.0",3.0,1],["2015-02-22","3.0",3.0,1],["2015-02-21","2.0",2.0,1],["2015-02-21","2.0",2.0,1],["2015-02-20","24.0",24.0,1],["2015-02-19","9.0",9.0,1],["2015-02-18","10.0",10.0,1],["2015-02-17","21.0",21.0,1],["2015-02-16","16.0",16.0,1],["2015-02-15","2.0",2.0,1],["2015-02-14","1.0",1.0,1],["2015-02-13","11.0",11.0,1],["2015-02-12","13.0",13.0,1],["2015-02-11","22.0",22.0,1],["2015-02-10","26.0",26.0,1],["2015-02-09","14.0",14.0,1],["2015-02-08","3.0",3.0,1],["2015-02-06","26.0",26.0,1],["2015-02-05","13.0",13.0,1],["2015-02-04","11.0",11.0,1],["2015-02-03","23.0",23.0,1],["2015-02-02","38.0",38.0,1],["2015-02-01","3.0",3.0,1],["2015-01-31","1.0",1.0,1],["2015-01-30","8.0",8.0,1],["2015-01-29","12.0",12.0,1],["2015-01-28","17.0",17.0,1],["2015-01-27","12.0",12.0,1],["2015-01-26","20.0",20.0,1],["2015-01-25","3.0",3.0,1],["2015-01-24","1.0",1.0,1],["2015-01-23","16.0",16.0,1],["2015-01-22","19.0",19.0,1],["2015-01-21","10.0",10.0,1],["2015-01-20","6.0",6.0,1],["2015-01-19","17.0",17.0,1],["2015-01-18","1.0",1.0,1],["2015-01-16","4.0",4.0,1],["2015-01-15","23.0",23.0,1],["2015-01-14","24.0",24.0,1],["2015-01-13","14.0",14.0,1],["2015-01-12","39.0",39.0,1],["2015-01-11","2.0",2.0,1],["2015-01-09","8.0",8.0,1],["2015-01-08","22.0",22.0,1],["2015-01-07","36.0",36.0,1],["2015-01-05","2.0",2.0,1],["2015-01-04","1.0",1.0,1],["2015-01-03","2.0",2.0,1],["2015-01-02","1.0",1.0,1],["2015-01-01","1.0",1.0,1],["2014-12-30","1.0",1.0,1],["2014-12-29","4.0",4.0,1],["2014-12-28","3.0",3.0,1],["2014-12-25","1.0",1.0,1],["2014-12-24","1.0",1.0,1],["2014-12-23","11.0",11.0,1],["2014-12-22","7.0",7.0,1],["2014-12-21","3.0",3.0,1],["2014-12-19","34.0",34.0,1],["2014-12-19","28.0",28.0,1],["2014-12-18","35.0",35.0,1],["2014-12-17","21.0",21.0,1],["2014-12-16","34.0",34.0,1],["2014-12-15","29.0",29.0,1],["2014-12-14","3.0",3.0,1],["2014-12-13","2.0",2.0,1],["2014-12-12","28.0",28.0,1],["2014-12-11","41.0",41.0,1],["2014-12-10","40.0",40.0,1],["2014-12-09","40.0",40.0,1],["2014-12-09","1.0",1.0,1],["2014-12-08","2.0",2.0,1],["2014-12-08","2.0",2.0,1],["2014-12-08","1.0",1.0,1],["2014-12-07","5.0",5.0,1],["2014-12-07","5.0",5.0,1],["2014-12-07","2.0",2.0,1],["2014-12-06","6.0",6.0,1],["2014-12-06","5.0",5.0,1],["2014-12-06","4.0",4.0,1],["2014-12-05","45.0",45.0,1],["2014-12-05","4.0",4.0,1],["2014-12-05","35.0",35.0,1],["2014-12-04","7.0",7.0,1],["2014-12-04","7.0",7.0,1],["2014-12-04","21.0",21.0,1],["2014-12-03","19.0",19.0,1],["2014-12-03","18.0",18.0,1],["2014-12-02","36.0",36.0,1],["2014-12-02","28.0",28.0,1],["2014-12-02","18.0",18.0,1],["2014-12-01","36.0",36.0,1],["2014-12-01","32.0",32.0,1],["2014-12-01","0.0",0.0,1],["2014-11-30","2.0",2.0,1],["2014-11-30","2.0",2.0,1],["2014-11-29","6.0",6.0,1],["2014-11-29","4.0",4.0,1],["2014-11-28","32.0",32.0,1],["2014-11-27","5.0",5.0,1],["2014-11-27","25.0",25.0,1],["2014-11-26","7.0",7.0,1],["2014-11-26","17.0",17.0,1],["2014-11-25","26.0",26.0,1],["2014-11-25","12.0",12.0,1],["2014-11-24","55.0",55.0,1],["2014-11-24","0.0",0.0,1],["2014-11-23","10.0",10.0,1],["2014-11-22","1.0",1.0,1],["2014-11-21","34.0",34.0,1],["2014-11-21","19.0",19.0,1],["2014-11-21","11.0",11.0,1],["2014-11-20","8.0",8.0,1],["2014-11-20","13.0",13.0,1],["2014-11-19","15.0",15.0,1],["2014-11-19","11.0",11.0,1],["2014-11-18","45.0",45.0,1],["2014-11-18","24.0",24.0,1],["2014-11-17","11.0",11.0,1],["2014-11-17","0.0",0.0,1],["2014-11-16","5.0",5.0,1],["2014-11-16","2.0",2.0,1],["2014-11-16","1.0",1.0,1],["2014-11-15","5.0",5.0,1],["2014-11-15","1.0",1.0,1],["2014-11-14","9.0",9.0,1],["2014-11-14","5.0",5.0,1],["2014-11-14","24.0",24.0,1],["2014-11-14","10.0",10.0,1],["2014-11-13","35.0",35.0,1],["2014-11-13","18.0",18.0,1],["2014-11-13","12.0",12.0,1],["2014-11-12","22.0",22.0,1],["2014-11-12","11.0",11.0,1],["2014-11-12","10.0",10.0,1],["2014-11-11","60.0",60.0,1],["2014-11-11","19.0",19.0,1],["2014-11-11","13.0",13.0,1],["2014-11-10","7.0",7.0,1],["2014-11-10","46.0",46.0,1],["2014-11-10","0.0",0.0,1],["2014-11-09","4.0",4.0,1],["2014-11-09","0.0",0.0,1],["2014-11-08","5.0",5.0,1],["2014-11-08","3.0",3.0,1],["2014-11-07","6.0",6.0,1],["2014-11-07","20.0",20.0,1],["2014-11-07","14.0",14.0,1],["2014-11-06","7.0",7.0,1],["2014-11-06","19.0",19.0,1],["2014-11-06","0.0",0.0,1],["2014-11-05","29.0",29.0,1],["2014-11-05","27.0",27.0,1],["2014-11-04","5.0",5.0,1],["2014-11-04","42.0",42.0,1],["2014-11-04","33.0",33.0,1],["2014-11-03","44.0",44.0,1],["2014-11-03","39.0",39.0,1],["2014-11-03","2.0",2.0,1],["2014-11-02","3.0",3.0,1],["2014-11-02","1.0",1.0,1],["2014-11-02","0.0",0.0,1],["2014-11-01","6.0",6.0,1],["2014-11-01","3.0",3.0,1],["2014-11-01","15.0",15.0,1],["2014-10-31","29.0",29.0,1],["2014-10-31","25.0",25.0,1],["2014-10-31","24.0",24.0,1],["2014-10-30","27.0",27.0,1],["2014-10-30","26.0",26.0,1],["2014-10-30","10.0",10.0,1],["2014-10-29","39.0",39.0,1],["2014-10-29","14.0",14.0,1],["2014-10-29","12.0",12.0,1],["2014-10-28","44.0",44.0,1],["2014-10-28","19.0",19.0,1],["2014-10-27","29.0",29.0,1],["2014-10-27","20.0",20.0,1],["2014-10-26","7.0",7.0,1],["2014-10-25","1.0",1.0,1],["2014-10-24","33.0",33.0,1],["2014-10-24","27.0",27.0,1],["2014-10-23","32.0",32.0,1],["2014-10-23","12.0",12.0,1],["2014-10-22","43.0",43.0,1],["2014-10-22","12.0",12.0,1],["2014-10-21","43.0",43.0,1],["2014-10-21","3.0",3.0,1],["2014-10-21","28.0",28.0,1],["2014-10-20","49.0",49.0,1],["2014-10-20","41.0",41.0,1],["2014-10-20","32.0",32.0,1],["2014-10-19","4.0",4.0,1],["2014-10-19","4.0",4.0,1],["2014-10-18","2.0",2.0,1],["2014-10-17","29.0",29.0,1],["2014-10-17","21.0",21.0,1],["2014-10-17","1.0",1.0,1],["2014-10-16","19.0",19.0,1],["2014-10-16","17.0",17.0,1],["2014-10-16","15.0",15.0,1],["2014-10-15","36.0",36.0,1],["2014-10-15","31.0",31.0,1],["2014-10-15","13.0",13.0,1],["2014-10-14","7.0",7.0,1],["2014-10-14","27.0",27.0,1],["2014-10-14","15.0",15.0,1],["2014-10-13","29.0",29.0,1],["2014-10-13","25.0",25.0,1],["2014-10-13","19.0",19.0,1],["2014-10-12","3.0",3.0,1],["2014-10-12","1.0",1.0,1],["2014-10-11","2.0",2.0,1],["2014-10-11","1.0",1.0,1],["2014-10-10","8.0",8.0,1],["2014-10-10","6.0",6.0,1],["2014-10-10","36.0",36.0,1],["2014-10-09","8.0",8.0,1],["2014-10-09","12.0",12.0,1],["2014-10-09","11.0",11.0,1],["2014-10-08","7.0",7.0,1],["2014-10-08","36.0",36.0,1],["2014-10-08","2.0",2.0,1],["2014-10-07","19.0",19.0,1],["2014-10-07","19.0",19.0,1],["2014-10-07","17.0",17.0,1],["2014-10-06","32.0",32.0,1],["2014-10-06","22.0",22.0,1],["2014-10-06","15.0",15.0,1],["2014-10-05","3.0",3.0,1],["2014-10-05","1.0",1.0,1],["2014-10-05","1.0",1.0,1],["2014-10-04","3.0",3.0,1],["2014-10-04","1.0",1.0,1],["2014-10-03","35.0",35.0,1],["2014-10-03","32.0",32.0,1],["2014-10-03","12.0",12.0,1],["2014-10-02","30.0",30.0,1],["2014-10-02","22.0",22.0,1],["2014-10-02","17.0",17.0,1],["2014-10-01","40.0",40.0,1],["2014-10-01","17.0",17.0,1],["2014-10-01","16.0",16.0,1],["2014-09-30","22.0",22.0,1],["2014-09-30","14.0",14.0,1],["2014-09-29","21.0",21.0,1],["2014-09-29","13.0",13.0,1],["2014-09-28","3.0",3.0,1],["2014-09-27","1.0",1.0,1],["2014-09-26","8.0",8.0,1],["2014-09-26","17.0",17.0,1],["2014-09-25","21.0",21.0,1],["2014-09-25","15.0",15.0,1],["2014-09-24","14.0",14.0,1],["2014-09-24","13.0",13.0,1],["2014-09-23","26.0",26.0,1],["2014-09-23","20.0",20.0,1],["2014-09-22","36.0",36.0,1],["2014-09-22","10.0",10.0,1],["2014-09-21","4.0",4.0,1],["2014-09-20","1.0",1.0,1],["2014-09-19","9.0",9.0,1],["2014-09-19","31.0",31.0,1],["2014-09-18","6.0",6.0,1],["2014-09-18","11.0",11.0,1],["2014-09-17","2.0",2.0,1],["2014-09-17","17.0",17.0,1],["2014-09-16","38.0",38.0,1],["2014-09-15","34.0",34.0,1]]')
asdf
;
end
<<eof
""
end
)
]
}
--:
;#
exit
q()
source('~/.active-rstudio-document')
plot(dat$date, dat$count, type='l')
plot(dat$date, dat$count, type='l', xlab="", ylab="received emails")
plot(dat$date, dat$count, type='l', xlab="", ylab="received emails", col='blue')
source('~/.active-rstudio-document')
readline('https://www.crwdst.at/emails/json')
source('~/.active-rstudio-document')
hist(dat$count)
boxplot(dat$count)
boxplot(dat$count, datp$count)
library(ggplot2)
ggplot(movies, aes(votes, rating))
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
setwd("~/Documents/coursera/dataScience/repData/RepData_PeerAssessment1")
getwd()
if(!file.exists("data")) {
dir.create("data")
}
data <- read.csv("./data/activity.csv")
getwd()
if(!file.exists("data")) {
dir.create("data")
}
if(!file.exists('./activity.zip')) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl,
destfile="./activity.zip",
method="curl")
dateDownloaded <- date()
}
if(!file.exists('./data/activity.csv')) {
unzip("./activity.zip", exdir="./data/")
}
data <- read.csv("./data/activity.csv")
mean(data$steps, na.rm=TRUE)
aggregate(data[,steps], by = list(data$date), FUN = sum)
aggregate(data[,'steps'], by = list(data$date), FUN = sum)
daily_steps = aggregate(data[,'steps'], by = list(data$date), FUN = sum)
mean(daily_steps$x)
mean(daily_steps$x, na.rm=TRUE)
round(mean(daily_steps$x, na.rm=TRUE))
round(mean(daily_steps$x, na.rm=TRUE),1)
round(mean(daily_steps$x, na.rm=TRUE),0)
mean_steps_per_day = round(mean(daily_steps$x, na.rm=TRUE),0)
mean_steps_per_day = round(mean(daily_steps$x, na.rm=TRUE),0)+1
mean_steps_per_day_string = prettyNum(mean_steps_per_day)
mean_steps_per_day_string = prettyNum(mean_steps_per_day, big.mark = ".")
mean_steps_per_day_string = format(prettyNum(mean_steps_per_day, big.mark = ".", digits = 0))
```
hist(daily_steps$x)
hist
hist(daily_steps$x; breaks=1000)
hist(daily_steps$x, breaks=1000)
hist(daily_steps$x, breaks=100)
hist(daily_steps$x, breaks=20)
xlab="Global Active Power (kilowatts)")
hist(data$Global_active_power, col="red", main="Global Active Power",
xlab="Global Active Power (kilowatts)")
hist(daily_steps$x, breaks=20, main="Distribution of Daily Steps", xlab="Number of Steps per Day")
library(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
set.seed(3435)
trainIndicator=rbinom(4601, size=1, prob=0.5)
table(trainIndicator)
trainSpam=spam(trainIndicator == 1,)
trainSpam=spam[trainIndicator == 1,]
testSpam = spam(trainIdicator==1)
